object `package` {
  implicit def string2Command(s: String) = new StringCommand(s)
  
  class StringCommand(s: command) {
    def |[O](f: List[String] => O) = Piped(s, f)
    //def >
  }
}

case class Piped[O](command: String, f: List[String] => O)

class Ssh {
  
  def exec(c: Piped) = () // exec("" | {x => println(x)} )
  
}


